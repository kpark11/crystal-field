        
        #   [r-3 (a.u.), r2 (a.u.), r4 (a.u.), lambda(exp) (cm-1), lambda(calc) (cm-1), p (cm-1)]
        
        #  2D    3d1
        if ion == "Sc2":
            r_l = np.array([0,0,0,86,79,0])
            return r_l
        elif ion == "Ti3":
            r_l = np.array([2.552,1.893,7.071,159,154,0])
        elif ion == "V4":
            r_l = np.array([3.684,1.377,3.593,255,248,0])
        
        #  3F    3d2
        elif ion == "Sc1":
            r_l = np.array([0,0,0,0,35,0])
        elif ion == "Ti2":
            r_l = np.array([2.133,2.447,13.17,61,60,0.16])
        elif ion == "V3":
            r_l = np.array([3.217,1.643,5.447,106,104,0.26])
        elif ion == "Cr4":
            r_l = np.array([4.484,1.227,2.906,163,164,0])
        
        #  4F    3d3
        elif ion == "Ti1":
            r_l = np.array([1.706,3.508,31.62,0,29,0])
        elif ion == "V2":
            r_l = np.array([2.748,2.070,9.605,57,55,0.11])
        elif ion == "Cr3":
            r_l = np.array([3.959,1.447,4.297,91,91,0.17])
        elif ion == "Mn4":
            r_l = np.array([5.361,1.104,2.389,135,134,0])
        
        
        #  5D    3d4
        elif ion == "V1":
            r_l = np.array([2.289,2.819,20.71,0,34,0])
        elif ion == "Cr2":
            r_l = np.array([3.451,1.781,7.211,59,58,0.12])
        elif ion == "Mn3":
            r_l = np.array([4.790,1.286,3.446,87,88,0.18])
        elif ion == "Fe4":
            r_l = np.array([6.332,1,1.986,125,129,0.25])
        
        #  6S    3d5
        elif ion == "Cr1":
            r_l = np.array([2.968,2.319,14.14,0,0,0])
        elif ion == "Mn2":
            r_l = np.array([4.250,1.548,5.513,0,0,0])
        elif ion == "Fe3":
            r_l = np.array([5.724,1.150,2.789,0,0,0])
        elif ion == "Co4":
            r_l = np.array([7.421,0.908,1.659,0,0,0])
        
        #  5D    3d6
        elif ion == "Mn1":
            r_l = np.array([3.683,2.026,10.87,-64,-64,0])
        elif ion == "Fe2":
            r_l = np.array([5.081,1.393,4.496,-114,-103,0.18])
        elif ion == "Co3":
            r_l = np.array([6.699,1.049,2.342,-145,0,0])
        elif ion == "Ni4":
            r_l = np.array([8.552,0.8371,1.423,-197,0,0])
        
        #  4F    3d7
        elif ion == "Fe1":
            r_l = np.array([0,1.774,8.385,-115,-119,0])
        elif ion == "Co2":
            r_l = np.array([6.035,1.251,3.655,-189,-178,0.24])
        elif ion == "Ni3":
            r_l = np.array([7.79,0.9582,1.971,-272,0,0])
        elif ion == "Cu4":
            r_l = np.array([9.814,0.7719,1.221,-320,0,0])
        
        #  3F    3d8
        elif ion == "Co1":
            r_l = np.array([5.388,1.576,6.637,-228,-228,0])
        #elif ion == "Ni2": # r^4 is taken from "NiO - from first principles" by Radwanski and Ropka
        #    r_l = np.array([7.094,1.130,10.5,-343,-324,0.53])
        elif ion == "Ni2":
            r_l = np.array([7.094,1.130,3.003,-343,-324,0.53])
        elif ion == "Cu3":
            r_l = np.array([9.018,0.8763,1.662,-438,0,0])
        
        #  2D    3d9
        elif ion == "Ni1":
            r_l = np.array([0,1.401,5.264,-605,0,0])
        elif ion == "Cu2":
            r_l = np.array([8.252,1.028,2.498,-830,-830,0])
        
        
        return r_l
    
    def theta(self,ion):
        if ion == "Sc2":
            theta = np.array([-2/21,2/63])
            return theta
        elif ion == "Ti3":
            theta = np.array([-2/21,2/63])  
        elif ion == "V4":
            theta = np.array([-2/21,2/63])
        
        #  3F    3d2
        elif ion == "Sc1":
            theta = np.array([-2/105,-2/315])
        elif ion == "Ti2":
            theta = np.array([-2/105,-2/315])
        elif ion == "V3":
            theta = np.array([-2/105,-2/315])
        elif ion == "Cr4":
            theta = np.array([-2/105,-2/315])
        
        #  4F    3d3
        elif ion == "Ti1":
            theta = np.array([2/105,2/315])
        elif ion == "V2":
            theta = np.array([2/105,2/315])
        elif ion == "Cr3":
            theta = np.array([2/105,2/315])
        elif ion == "Mn4":
            theta = np.array([2/105,2/315])
        
        
        #  5D    3d4
        elif ion == "V1":
            theta = np.array([2/21,-2/63])
        elif ion == "Cr2":
            theta = np.array([2/21,-2/63])
        elif ion == "Mn3":
            theta = np.array([2/21,-2/63])
        elif ion == "Fe4":
            theta = np.array([2/21,-2/63])
        
        #  6S    3d5
        elif ion == "Cr1":
            pass
        elif ion == "Mn2":
            pass
        elif ion == "Fe3":
            pass
        elif ion == "Co4":
            pass
        
        #  5D    3d6
        elif ion == "Mn1":
            theta = np.array([-2/21,2/63])
        elif ion == "Fe2":
            theta = np.array([-2/21,2/63])
        elif ion == "Co3":
            theta = np.array([-2/21,2/63])
        elif ion == "Ni4":
            theta = np.array([-2/21,2/63])
        
        #  4F    3d7
        elif ion == "Fe1":
            theta = np.array([-2/107,-2/315])
        elif ion == "Co2":
            theta = np.array([-2/107,-2/315])
        elif ion == "Ni3":
            theta = np.array([-2/107,-2/315])
        elif ion == "Cu4":
            theta = np.array([-2/107,-2/315])
        
        #  3F    3d8
        elif ion == "Co1":
            theta = np.array([2/105,2/315])
        elif ion == "Ni2":
            theta = np.array([2/105,2/315])
        elif ion == "Cu3":
            theta = np.array([2/105,2/315])
        
        #  2D    3d9
        elif ion == "Ni1":
            theta = np.array([2/21,-2/63])
        elif ion == "Cu2":
            theta = np.array([2/21,-2/63])

        return theta
